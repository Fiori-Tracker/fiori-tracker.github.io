////
/// Adapted from https://github.com/adrienbrignon/mkdocs-exporter/blob/0d4eae0c1920ecffe87d66b7f404c13ff7cdea47/resources/stylesheets/pdf.scss
///
/// MIT License
/// Copyright (c) 2023 Adrien Brignon
////
@page {
  // Can't use var() here, because some @page properties don't resolve it
  // https://stackoverflow.com/questions/44735420/using-custom-properties-with-page-rules
  size: A4;
  margin: 1.20cm;

  // Variables with page metadata that need to be fetched for all pages
  --page-margin-text-size: 9pt;
  --page-margin-text-color: #7f7f7f;
  --page-top-center-content: "Fiori Tracker";
  --page-bottom-left-content: "All Rights Reserved Â© Nype";
  // Macros only run for Cover pages, and this data is needed for all pages
  // The placeholder is replaced via the hook.py
  --page-pdf-date: "#pdf_date#";
  --page-title: "#page_title#";

  @top-center {
    font-size: var(--page-margin-text-size);
    color: var(--page-margin-text-color);
    content: var(--page-top-center-content) " - " var(--page-title);
  }

  @bottom-right {
    font-size: var(--page-margin-text-size);
    color: var(--page-margin-text-color);
    content: var(--page-pdf-date);
  }

  @bottom-center {
    font-size: var(--page-margin-text-size);
    color: var(--page-margin-text-color);
    content: "Page " counter(page) " of " counter(pages);
  }

  @bottom-left {
    font-size: var(--page-margin-text-size);
    color: var(--page-margin-text-color);
    content: var(--page-bottom-left-content);
  }
}

:root {
  --margin: 1.20cm; // Based on @page.margin
  --height: 29.7cm; // Based on what? Maybe on @page.size
  --width: 21cm; // Based on what? Maybe on @page.size
  --offset: calc(var(--margin) * 2); // Used later in height calculation to take margins into account
  --ft-sticker-bg-color: #0d0d72; // Match background with sticker

  --cover-large-text: 32pt;
  --cover-medium-text: 24pt;
  --cover-small-text: 12pt;
  --cover-text-color: #fff;
}

body {
  print-color-adjust: exact;
  // counter-reset: chapter;
  text-rendering: geometricPrecision;
}

.limits-cover {
  color: var(--cover-text-color);
  border: 1px solid #fff;
  height: calc(var(--height) - var(--offset));
  width: calc(var(--width) - var(--offset));
  position: relative;
  font-size: var(--cover-small-text);

  > img.pdf-background {
    position: absolute;
    bottom: 0;
    left: 0;
    width: 100%;
  }

  > section {
    padding: 0.635cm;
    word-wrap: break-word;
    margin-top: calc(var(--height) / 2 - var(--offset) - 2cm);
    text-align: center;

    > .brand-name {
      font-size: var(--cover-large-text);
      font-weight: 700;
      // line-height: 1.1;
      // margin-top: 1em;
      // string-set: title content(text);
    }

    > .page-title {
      font-size: var(--cover-medium-text);
    }

    > .pdf-date {
      font-size: var(--cover-small-text);
    }
  }
}

.front-cover {
  page-break-after: always;

  .logo {
    position: absolute;
    top: calc(2cm);
    fill: var(--cover-text-color);
    left: 50%;
    transform: translateX(-50%);

    > div {
      width: 6cm;
      text-align: center;
      height: 6cm;
    }
  }
}

.back-cover {
  page: last;

  a {
    color: inherit;
  }
}

// Material fixes

.md-main .md-main__inner {
  margin: 0;
}

.md-content .md-content__inner {
  margin: 0;
  padding: 0;

  &::before {
    height: 0;
  }
}

hr:has(+ div.md-source-file), .md-source-file {
  display: none !important;
}

summary::after {
  display: none;
}

// This was deprecated
//
// h1, h2, h3 {
//   string-set: chapter content();
// }
//
// Replacement is to use counter-reset and counter-increment
// Errata: The chapters aren't incremented correctly this way
// Hard to say if it worked before the deprecation
// TODO Debug the chapter logic

// h1, h2, h3 {
//   counter-increment: chapter;
// }
//
// h1::before, h2::before, h3::before {
//   content: "Chapter " counter(chapter) ": ";
//   font-weight: 700;
// }
